---
type Props = {
  "q-name": string;
  size?: "small" | "large";
  color?: "normal" | "light" | "red";
  class?: string;
};

const {
  "q-name": qName,
  size = "small",
  color = "normal",
  class: className = "",
} = Astro.props;
---

<button q-name={qName} class={`${size} ${color} ${className}`}>
  <slot />
  <span class="optional-text"><slot name="optional-text" /></span>
</button>

<style lang="scss">
  button {
    box-shadow: 0 5px 2px rgb(0 0 0 / 25%);
    width: 100%;
    height: 100%;
    transition: all 0.1s ease-in;
    text-transform: uppercase;

    &:hover {
      box-shadow: 5px 10px 6px rgb(0 0 0 / 25%);
    }
  }

  .optional-text {
    display: none;
  }

  .large {
    font-size: 20pt;
    font-weight: bold;
    border: none;
    border: 5px solid transparent;

    &:hover {
      border-color: slategray;
      transform: translateY(-5%) scale(1.05, 1.05);
    }

    .optional-text {
      padding-top: 2rem;
      display: block;
      color: var(--text-color-dark);
      font-weight: normal;
      font-size: 15pt;
    }
  }

  .small {
    border: none;
    font-size: 15pt;
    font-weight: bold;

    &:hover {
      transform: translateY(-10%) scale(1.01, 1.01);
    }
  }

  .normal {
    color: var(--text-color);
    background-color: var(--bg-color-dark);
  }

  .light {
    color: var(--text-color);
    background-color: var(--bg-color);
  }

  .red {
    background-color: var(--bg-color-red);
    color: var(--text-color);
  }
</style>
